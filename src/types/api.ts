// let's imagine this file is autogenerated from the backend
// ideally, we want to keep these api related types in sync
// with the backend instead of manually writing them out

export type BaseEntity = {
    id: string
}

export type Entity<T> = {
    [K in keyof T]: T[K]
} & BaseEntity

export type User = Entity<{
    userID: string
    displayName: string
    lastPlayedAt: string
    lastScrapedAt: string
    scrapeStatus: string
    rating: string
    seasonPlayCount: string
    totalPlayCount: string
    bio: string
    profileImageUrl: string
    location: string
    twitterID: string
}>

export type AuthUser = Entity<{
    userID: string
    displayName: string
}>

export type AuthResponse = {
    jwt: string
    user: AuthUser
}

export type Song = Entity<{
    title: string
    artist: string
    genre: string
    bpm: string
    imageUrl: string
    isUtage: boolean
    isAvailable: boolean
    version: string
    releaseDate: string
    deleteDate: string
    beatmaps: Beatmap[]
}>

export type Beatmap = Entity<{
    difficulty:
        | 'basic'
        | 'advanced'
        | 'expert'
        | 'master'
        | 'remaster'
        | 'utage'
    level: string
    internalLevel: number | null
    type: 'std' | 'dx' | 'utage'
    totalNotes: number
    tap: number
    hold: number
    slide: number
    touch: number
    break: number
    noteDesigner: string
    maxDxScore: number
}> &
    Song

export type ScoresResponse = {
    scores: Score[]
    nextOffset: number
    hasMore: boolean
}

export type Score = Entity<{
    userID: string
    accuracy: string
    maxCombo: number
    dxScore: number
    tapCritical: number
    tapPerfect: number
    tapGreat: number
    tapGood: number
    tapMiss: number
    holdCritical: number
    holdPerfect: number
    holdGreat: number
    holdGood: number
    holdMiss: number
    slideCritical: number
    slidePerfect: number
    slideGreat: number
    slideGood: number
    slideMiss: number
    touchCritical: number
    touchPerfect: number
    touchGreat: number
    touchGood: number
    touchMiss: number
    breakCritical: number
    breakPerfect: number
    breakGreat: number
    breakGood: number
    breakMiss: number
    fast: number
    late: number
    playedAt: string
}> &
    Beatmap
